{
  "extends": "./tsconfig.paths.json",
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */
    /* Project */
    "target": "ES2022", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "experimentalDecorators": true, /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true, /* Emit design-type metadata for decorated declarations in source files. */
    /* Modules */
    "module": "NodeNext",
    "rootDir": "./", /* Specify the root folder within your source files. */
    "moduleResolution": "node", /* Specify how TypeScript looks up a file from a given module specifier. */
    "allowJs": true, /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "outDir": ".build", /* Specify an output folder for all emitted files. */
    "removeComments": true, /* Disable emitting comments. */
    "noEmitOnError": true, /* Disable emitting files if any type checking errors are reported. */
    "preserveConstEnums": true, /* Disable erasing 'const enum' declarations in generated code. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    /* Type Checking */
    "strict": true, /* Enable all strict type-checking options. */
    "strictNullChecks": true, /* When type checking, take into account 'null' and 'undefined'. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true, /* Raise an error when a function parameter isn't read. */
    "noImplicitReturns": true, /* Enable error reporting for codepaths that do not explicitly return in a function. */
    "noFallthroughCasesInSwitch": true, /* Enable error reporting for fallthrough cases in switch statements. */
    "noUncheckedIndexedAccess": true, /* Add 'undefined' to a type when accessed using an index. */
    /* Completeness */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  },
  "include": [
    "functions/*.ts",
    "tests/**/*.ts",
    "tests/**/**/*.ts",
    "src/*.ts",
    "src/**/*.ts",
    "src/**/**/*.ts",
    "serverless.ts"
  ],
  "exclude": [
    "node_modules/**/*",
    ".serverless/**/*",
    ".build/**/*"
  ],
  "ts-node": {
    "require": [
      "tsconfig-paths/register"
    ]
  },
}